Start of program

	package org.firstinspires.ftc.teamcode;
	import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
	import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
	import com.qualcomm.robotcore.hardware.CRServo;
	import com.qualcomm.robotcore.hardware.DcMotor;
	import com.qualcomm.robotcore.hardware.DcMotorEx;
	import com.qualcomm.robotcore.hardware.Servo;
	import com.qualcomm.robotcore.util.ElapsedTime;
	import com.qualcomm.robotcore.util.Range;

	import org.firstinspires.ftc.robotcore.external.navigation.CurrentUnit;

	@TeleOp(name="Murphy's Law ", group="Robot")
	//@Disabled
	public class GobildaStarterBot extends LinearOpMode 

Mecanum Wheel Driving Code

	    double forward = gamepad1.left_stick_y;
            double turn = gamepad1.left_stick_x;
            double strafe = gamepad1.right_stick_x;

            double frontRightPower = Range.clip((forward + strafe + turn), -1, 1);
            double frontLeftPower = Range.clip((-forward + strafe + turn), -1, 1);
            double backLeftPower = Range.clip((forward + strafe - turn), -1, 1);
            double backRightPower = Range.clip((forward - strafe + turn), -1, 1);

Auto Strafing
	One Tile is 11
	Forward      -FR   -FL    BR   -BL
	Backward      FR    FL   -BR    BL
	Turn          FR    FL    BR   -BL
	Turn         -FR   -FL   -BR    BL
	Strafe Right -FR    FL    BR    BL
	Strafe Left   FR   -FL   -BR   -BL

	encoderDrive(DRIVE_SPEED,       11,    11,   11,   -11,  20);

Inversion Button

            if (gamepad1.back) {
                frontRightPower = -frontRightPower;
                frontLeftPower = -frontLeftPower;
                backLeftPower = -backLeftPower;
                backRightPower = -backRightPower;
            } else {
                frontRightPower = frontRightPower;
                frontLeftPower = frontLeftPower;
                backLeftPower = backLeftPower;
                backRightPower = backRightPower;
            }

Simple If, Else if, and Else

	 if (gamepad1.a) {
                intake.setPower(INTAKE_COLLECT);
            }
            else if (gamepad1.x) {
                intake.setPower(INTAKE_OFF);
            }
            else if (gamepad1.b) {
                intake.setPower(INTAKE_DEPOSIT);
            }

            if(gamepad1.right_bumper){
            	wrist.setPosition(WRIST_FOLDED_IN);
            } 

	    else { 
		wrist.setPosition(WRIST_FOLDED_OUT);
		}

            if (gamepad1.left_bumper){
                armPosition = ARM_CLEAR_BARRIER;
            }

            else if (gamepad1.y){
                armPosition = ARM_SCORE_SAMPLE_IN_LOW;
            }

            else if (gamepad1.dpad_left) {
                armPosition = ARM_COLLAPSED_INTO_ROBOT;
                intake.setPower(INTAKE_OFF);
                wrist.setPosition(WRIST_FOLDED_IN);
            }

            else if (gamepad1.dpad_right){
                armPosition = ARM_SCORE_SPECIMEN;
                wrist.setPosition(WRIST_FOLDED_IN);
            }

            else if (gamepad1.dpad_up){
                armPosition = ARM_ATTACH_HANGING_HOOK;
                intake.setPower(INTAKE_OFF);
                wrist.setPosition(WRIST_FOLDED_IN);
            }

            else if (gamepad1.dpad_down) {
                armPosition = ARM_WINCH_ROBOT;
                intake.setPower(INTAKE_OFF);
                wrist.setPosition(WRIST_FOLDED_IN);
            }


         
